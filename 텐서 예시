import tensorflow as tf

import numpy as np

# 입력값은 15x15x3 크기의 3차원 배열입니다.

inputs = tf.keras.layers.Input(shape=(15, 15, 3))

# 합성곱 레이어를 이용하여 입력값을 처리합니다.

conv1 = tf.keras.layers.Conv2D(64, (3, 3), activation='relu', padding='same')(inputs)

conv2 = tf.keras.layers.Conv2D(64, (3, 3), activation='relu', padding='same')(conv1)

conv3 = tf.keras.layers.Conv2D(64, (3, 3), activation='relu', padding='same')(conv2)

# 풀링 레이어를 이용하여 데이터를 다운샘플링합니다.

pool1 = tf.keras.layers.MaxPooling2D((2, 2))(conv3)

# 전결합 레이어를 이용하여 출력값을 계산합니다.

flat = tf.keras.layers.Flatten()(pool1)

dense1 = tf.keras.layers.Dense(128, activation='relu')(flat)

dense2 = tf.keras.layers.Dense(1, activation='sigmoid')(dense1)

# 모델을 컴파일합니다.

model = tf.keras.models.Model(inputs=inputs, outputs=dense2)

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# 학습 데이터를 불러옵니다.

x_train = np.load('x_train.npy')

y_train = np.load('y_train.npy')

# 모델을 학습시킵니다.

model.fit(x_train, y_train, epochs=10, batch_size=32)

